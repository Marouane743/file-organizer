name: CI/CD for File Organizer

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  test_matrix:
    name: Test with Python Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install Dependencies
        run: poetry install

      - name: Run Tests
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -v

      - name: Lint with flake8
        run: |
          poetry run flake8 file_organizer tests

  release:
    name: Release on Tag
    needs: [test_matrix]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install Dependencies
        run: poetry install

      - name: Build Distribution
        run: |
          poetry build  # creates dist/*.tar.gz and dist/*.whl

      - name: Generate simple changelog
        id: changelog
        run: |
          echo "::set-output name=content::$(git log --pretty=oneline $(git describe --tags --abbrev=0 --always)^..HEAD)"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Automatic release for ${{ github.ref_name }}

            Here is the changelog:
            ${{ steps.changelog.outputs.content }}

          artifacts: "dist/*.tar.gz,dist/*.whl"
          artifactErrorsFailBuild: true

  deploy_docs:
    name: Deploy Documentation
    needs: [test_matrix]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install Dependencies
        run: poetry install

      - name: Generate Docs
        run: |
          poetry run pdoc file_organizer --output-dir docs/reference

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/reference

